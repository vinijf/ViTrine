@model PaginatedList<ViTrine.Models.Loja>

@{
    ViewData["Title"] = "Lojas";
}

<h1>Lojas</h1>

<p>
    <a asp-action="Create">Adicionar Loja</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Pesquisar" class="btn btn-default" />
            <br />
            <a asp-action="Index">Limpar</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                Nome
            </th>
            <th>
                Categoria
            </th>
            <th>
                Telefone
            </th>
            <th>
                Cidade
            </th>
            <th>
                Endereço
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <a asp-controller="Produto" asp-action="Index" asp-route-id="@item.LojaId">
                        @Html.DisplayFor(modelItem => item.NomeLoja)
                    </a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoriaLoja)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TelefoneLoja)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CidadeLoja)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EnderecoLoja)
                </td>
                <td>
                    <a asp-action="Update" asp-route-id="@item.LojaId">Editar</a> |
                    <a asp-action="Read" asp-route-id="@item.LojaId">Detalhes</a> |
                    <a asp-action="Delete" asp-route-id="@item.LojaId">Deletar</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>